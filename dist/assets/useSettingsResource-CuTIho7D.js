import{r as n}from"./index-B6fIVZFR.js";function x(d,p,S={}){const[v,c]=n.useState(S||{}),[b,u]=n.useState(!0),[h,y]=n.useState(!1),[R,o]=n.useState(""),[w,i]=n.useState(""),m=n.useRef(d),f=n.useRef(p),l=n.useMemo(()=>{const e=[];return typeof m.current!="function"&&e.push("getFn"),typeof f.current!="function"&&e.push("saveFn"),e.length?e.join(" & "):null},[]);return n.useEffect(()=>{if(o(""),i(""),l){const a=`useSettingsResource: ${l} is not a function.
Pass the function itself, not the result of calling it.
Example: useSettingsResource(SettingsAPI.getX, SettingsAPI.saveX, defaults)`;console.error(a,{getFn:d,saveFn:p}),o(a),u(!1);return}const e=new AbortController;return(async()=>{var a,r;u(!0);try{const t=await m.current({signal:e.signal});if(e.signal.aborted)return;const s=(t==null?void 0:t.data)!==void 0?t.data:t;c(s??S??{})}catch(t){if(e.signal.aborted)return;const s=((r=(a=t==null?void 0:t.response)==null?void 0:a.data)==null?void 0:r.error)||(t==null?void 0:t.message)||"Failed to load settings";o(s)}finally{e.signal.aborted||u(!1)}})(),()=>e.abort()},[l]),{data:v,setData:c,loading:b,saving:h,error:R,success:w,save:async e=>{var a,r;y(!0),o(""),i("");try{const t=e??v??{};if(typeof f.current!="function")throw new Error("useSettingsResource: saveFn is not a function.");const s=await f.current(t),g=(s==null?void 0:s.data)!==void 0?s.data:s;g&&typeof g=="object"&&c(g),i("Saved.")}catch(t){const s=((r=(a=t==null?void 0:t.response)==null?void 0:a.data)==null?void 0:r.error)||(t==null?void 0:t.message)||"Failed to save settings";o(s)}finally{y(!1)}}}}export{x as u};
