import{r as n}from"./index-DX7Us0v_.js";function x(d,p,S={}){const[v,c]=n.useState(S||{}),[h,u]=n.useState(!0),[R,y]=n.useState(!1),[E,o]=n.useState(""),[w,i]=n.useState(""),m=n.useRef(d),f=n.useRef(p),l=n.useMemo(()=>{const t=[];return typeof m.current!="function"&&t.push("getFn"),typeof f.current!="function"&&t.push("saveFn"),t.length?t.join(" & "):null},[]);return n.useEffect(()=>{if(o(""),i(""),l){const a=`useSettingsResource: ${l} is not a function. 
Pass the function itself, not the result of calling it. 
Example: useSettingsResource(SettingsAPI.getX, SettingsAPI.saveX, defaults)`;console.error(a,{getFn:d,saveFn:p}),o(a),u(!1);return}let t=!1;return(async()=>{var a,r;u(!0);try{const e=await m.current();if(!t){const s=(e==null?void 0:e.data)!==void 0?e.data:e;c(s??S??{})}}catch(e){if(!t){const s=((r=(a=e==null?void 0:e.response)==null?void 0:a.data)==null?void 0:r.error)||(e==null?void 0:e.message)||"Failed to load settings";o(s)}}finally{t||u(!1)}})(),()=>{t=!0}},[l]),{data:v,setData:c,loading:h,saving:R,error:E,success:w,save:async t=>{var a,r;y(!0),o(""),i("");try{const e=t??v??{};if(typeof f.current!="function")throw new Error("useSettingsResource: saveFn is not a function.");const s=await f.current(e),g=(s==null?void 0:s.data)!==void 0?s.data:s;g&&typeof g=="object"&&c(g),i("Saved.")}catch(e){const s=((r=(a=e==null?void 0:e.response)==null?void 0:a.data)==null?void 0:r.error)||(e==null?void 0:e.message)||"Failed to save settings";o(s)}finally{y(!1)}}}}export{x as u};
